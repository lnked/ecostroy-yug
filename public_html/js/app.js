var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var app = app || {};

(function (body) {
    'use strict';

    app = {
        _extend: function _extend(source, config) {
            if (typeof config !== 'undefined') {
                for (var x in config) {
                    source[x] = config[x];
                }
            }

            return source;
        },
        bind: function bind() {
            for (var _ in this) {
                if (_typeof(this[_]) == 'object' && typeof this[_].init !== 'undefined') {
                    if (typeof this[_].init == 'function') {
                        this[_].init();
                    }
                }
            }
        },
        init: function init() {
            this.bind();
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fX2FwcC5pbml0LmpzIl0sIm5hbWVzIjpbImFwcCIsIl9leHRlbmQiLCJzb3VyY2UiLCJjb25maWciLCJ4IiwiYmluZCIsIl8iLCJpbml0IiwiZG9jdW1lbnQiLCJib2R5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE1BQU1BLE9BQU8sRUFBakI7O0FBRUEsQ0FBRSxnQkFBUTtBQUNOOztBQUVBQSxVQUFNO0FBRUZDLGVBRkUsbUJBRU9DLE1BRlAsRUFFZUMsTUFGZixFQUV1QjtBQUNyQixnQkFBSSxPQUFPQSxNQUFQLEtBQWtCLFdBQXRCLEVBQ0E7QUFDSSxxQkFBSyxJQUFNQyxDQUFYLElBQWdCRCxNQUFoQixFQUNBO0FBQ0lELDJCQUFPRSxDQUFQLElBQVlELE9BQU9DLENBQVAsQ0FBWjtBQUNIO0FBQ0o7O0FBRUQsbUJBQU9GLE1BQVA7QUFDSCxTQVpDO0FBY0ZHLFlBZEUsa0JBY007QUFDSixpQkFBSSxJQUFNQyxDQUFWLElBQWUsSUFBZixFQUNBO0FBQ0ksb0JBQUksUUFBUSxLQUFLQSxDQUFMLENBQVIsS0FBb0IsUUFBcEIsSUFBZ0MsT0FBUSxLQUFLQSxDQUFMLEVBQVFDLElBQWhCLEtBQTBCLFdBQTlELEVBQ0E7QUFDSSx3QkFBSSxPQUFRLEtBQUtELENBQUwsRUFBUUMsSUFBaEIsSUFBeUIsVUFBN0IsRUFDQTtBQUNJLDZCQUFLRCxDQUFMLEVBQVFDLElBQVI7QUFDSDtBQUNKO0FBQ0o7QUFDSixTQXpCQztBQTJCRkEsWUEzQkUsa0JBMkJNO0FBQ0osaUJBQUtGLElBQUw7QUFDSDtBQTdCQyxLQUFOO0FBZ0NILENBbkNELEVBbUNJRyxTQUFTQyxJQW5DYiIsImZpbGUiOiJfX19hcHAuaW5pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBhcHAgPSBhcHAgfHwge307XG5cbigoYm9keSA9PiB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgYXBwID0ge1xuXG4gICAgICAgIF9leHRlbmQgKHNvdXJjZSwgY29uZmlnKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyAhPT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCB4IGluIGNvbmZpZylcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZVt4XSA9IGNvbmZpZ1t4XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgICAgIH0sXG5cbiAgICAgICAgYmluZCAoKSB7XG4gICAgICAgICAgICBmb3IoY29uc3QgXyBpbiB0aGlzKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgKHRoaXNbX10pID09ICdvYmplY3QnICYmIHR5cGVvZiAodGhpc1tfXS5pbml0KSAhPT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICh0aGlzW19dLmluaXQpID09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbX10uaW5pdCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGluaXQgKCkge1xuICAgICAgICAgICAgdGhpcy5iaW5kKCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSkoZG9jdW1lbnQuYm9keSk7Il19

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var app = app || {};

(function (body) {
    "use strict";

    var $body = $(body),
        _this;

    app.ajaxForm = {

        config: {
            form_class: '.form-ajax',
            form_reset: 'form-reset',
            link_class: '.js-request-link',
            error_class: 'error',
            error_message: 'form__error-message',
            error_message_class: 'j-error-message',
            error_message_addclass: 'show',
            form_label: '.form__wrapper',
            checkbox_label: 'checkbox__label'
        },

        callback_stack: {},

        extend: function extend(config) {
            _this = this;

            if (typeof config !== 'undefined') {
                var x;
                for (x in config) {
                    if (typeof _this.config[x] !== 'undefined') _this.config[x] = config[x];
                }
            }
        },
        default_handler: function default_handler(form, response) {
            _this = this;

            if (response.status) {
                if (response.hasOwnProperty('redirect_url')) {
                    window.location.href = response.redirect_url;
                }
            } else if (typeof response.errors !== 'undefined' || typeof response.error_message !== 'undefined') {
                var errors, error_message;

                if (typeof response.errors !== 'undefined') {
                    errors = response.errors;
                }

                if (typeof response.error_message !== 'undefined') {
                    error_message = response.error_message;
                }

                _this.validation(form, errors, response.error_message);
            }

            if (response.hasOwnProperty('open_popup')) {
                if ($('body').find('.popup.is-open').length) {
                    $.popup.close($('body').find('.popup.is-open'), function () {
                        $.popup.open(response.open_popup);
                    });
                } else {
                    $.popup.open(response.open_popup);
                }
            }

            if (response.hasOwnProperty('message')) {
                $.popup.message(response.title, response.message);
            }
        },
        validation: function validation(form, errors, error_message) {
            _this = this;

            form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
            form.find('.' + _this.config.error_message).remove();
            form.find('.' + _this.config.error_message_class).removeClass(_this.config.error_message_addclass);

            var fieldName, field;

            setTimeout(function () {
                if (typeof error_message !== 'undefined' && error_message !== '') {
                    form.find('.' + _this.config.error_message_class).html(error_message);
                    form.find('.' + _this.config.error_message_class).addClass(_this.config.error_message_addclass);
                }

                if (typeof errors !== 'undefined' && errors !== '') {
                    for (fieldName in errors) {
                        if (form.find('input[name="' + fieldName + '"]').length > 0) {
                            field = form.find('input[name="' + fieldName + '"]');
                        }

                        if (form.find('select[name="' + fieldName + '"]').length > 0) {
                            field = form.find('select[name="' + fieldName + '"]');
                        }

                        if (form.find('textarea[name="' + fieldName + '"]').length > 0) {
                            field = form.find('textarea[name="' + fieldName + '"]');
                        }

                        if (field.closest('.' + _this.config.checkbox_label).length > 0) {
                            field = field.closest('.' + _this.config.checkbox_label);
                        }

                        if (typeof field !== 'undefined') {
                            field.addClass(_this.config.error_class);
                            field.closest(_this.config.form_label).append('<div class="' + _this.config.error_message + '">' + errors[fieldName] + '</div>');
                        }
                    }
                }
            }, 10);
        },
        upload: function upload() {
            _this = this;

            $body.on('submit', '.form-file-upload', function (e) {
                return AIM.submit(this, {
                    onStart: function onStart() {},
                    onComplete: function onComplete(result) {
                        if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result.status === true && result.hasOwnProperty('photo_url')) {}
                    }
                });
            });

            $(document).on('change', '.upload_button_onchange', function () {
                if ($(this).closest('.upload_button').find('.upload_button_field').length > 0) {
                    $(this).closest('.upload_button').find('.upload_button_field').html($(this).val());
                }
            });
        },
        send: function send(action, method, data, cb, err) {

            if (typeof cb !== 'function') {
                cb = function cb() {};
            }

            if (typeof err !== 'function') {
                err = function err() {};
            }

            try {

                $.ajaxSetup({
                    headers: {
                        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                    }
                });

                $.ajax({
                    url: action,
                    type: method,
                    data: data,
                    contentType: false,
                    processData: method.toLowerCase() == 'get',
                    success: cb,
                    error: err,
                    dataType: 'JSON'
                });
            } catch (e) {}
        },
        initLink: function initLink() {
            _this = this;

            $body.on('click', _this.config.link_class, function (e) {
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                var link = $(this);

                if (link.data('is-busy')) {
                    return;
                }

                link.data('is-busy', true);

                var action = $(this).attr('href') || $(this).data('action'),
                    method = $(this).data('method') || 'get',
                    data = {};

                _this.send(action, method, data, function (response) {
                    if (link.data('callback') && _this.callback_stack.hasOwnProperty(link.data('callback'))) {
                        _this.callback_stack[link.data('callback')](link, response);
                    } else {
                        _this.default_handler(link, response);
                    }

                    if (response.status === true) {}

                    link.data('is-busy', false);
                }, function (response) {
                    _this.default_handler(link, response);
                    link.data('is-busy', false);
                });
            });
        },
        initForm: function initForm() {
            _this = this;

            $body.on('submit', _this.config.form_class, function (e) {
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                var form = $(this),
                    action = form.attr('action'),
                    method = form.attr('method') || 'post',
                    data = !!window.FormData ? new FormData(form[0]) : form.serialize();

                if (form.data('is-busy')) {
                    return;
                }

                form.data('is-busy', true);

                if (typeof button !== 'undefined') {
                    if (button.data('loading')) {
                        button.data('original', button.text());
                        button.text(button.data('loading'));
                    }

                    button.addClass('preload');
                }

                if (form.data('precallback') && _this.callback_stack.hasOwnProperty(form.data('precallback'))) {
                    if (!_this.callback_stack[form.data('precallback')](form)) {
                        return false;
                    }
                }

                _this.send(action, method, data, function (response) {
                    if (form.data('callback') && _this.callback_stack.hasOwnProperty(form.data('callback'))) {
                        _this.callback_stack[form.data('callback')](form, response);
                    } else {
                        _this.default_handler(form, response);
                    }

                    if (response.status === true) {
                        if (form.hasClass(_this.config.form_reset)) {
                            form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
                            form.get(0).reset();
                        }
                    }

                    if (typeof button !== 'undefined') {
                        if (button.data('original')) {
                            button.text(button.data('original'));
                        }

                        button.removeClass('preload');
                    }

                    form.data('is-busy', false);
                }, function (response) {
                    _this.default_handler(form, response);
                    form.data('is-busy', false);
                });
            });
        },
        init: function init(config) {
            this.extend(config);

            this.initForm();
            this.initLink();
        }
    };

    app.ajaxForm.init();
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

var app = app || {};

(function (body) {
    "use strict";

    function CountdownTimer(elm, tl) {
        this.initialize.apply(this, arguments);
    }

    CountdownTimer.prototype = {
        initialize: function initialize(elm, tl) {
            var elem = document.getElementById(elm);

            if (elem) {
                this.elem = elem;
                this.tl = tl;
                this.countDown();
            }
        },

        countDown: function countDown() {
            var today = new Date(),
                day = Math.floor((this.tl - today) / (24 * 60 * 60 * 1000)),
                hour = Math.floor((this.tl - today) % (24 * 60 * 60 * 1000) / (60 * 60 * 1000)),
                min = Math.floor((this.tl - today) % (24 * 60 * 60 * 1000) / (60 * 1000)) % 60,
                sec = Math.floor((this.tl - today) % (24 * 60 * 60 * 1000) / 1000) % 60 % 60,
                me = this;

            if (this.tl - today > 0) {

                var timer = ['<div class="timer__parts__column"><div class="timer__parts__digit">', this.addZero(day), '</div><div class="timer__parts__caption">', declOfNum(day, ['День', 'Дня', 'Дней']), '</div></div>', '<div class="timer__parts__column"><div class="timer__parts__digit">', this.addZero(hour), '</div><div class="timer__parts__caption">', declOfNum(hour, ['Час', 'Часа', 'Часов']), '</div></div>', '<div class="timer__parts__column"><div class="timer__parts__digit">', this.addZero(min), '</div><div class="timer__parts__caption">', declOfNum(min, ['Минута', 'Минуты', 'Минут']), '</div></div>', '<div class="timer__parts__column"><div class="timer__parts__digit">', this.addZero(sec), '</div><div class="timer__parts__caption">', declOfNum(sec, ['Секунда', 'Секунды', 'Секунд']), '</div></div>'];

                if (this.elem) {
                    this.elem.innerHTML = timer.join('');
                    setTimeout(function () {
                        me.countDown();
                    }, 1000);
                } else {
                    return;
                }
            } else {
                return false;
            }
        },

        addZero: function addZero(num) {
            return ('0' + num).slice(-2);
        }
    };

    app.countdown = {
        init: function init() {
            // Акция длится не более 7 - 9 дней
            // if (day < 7)
            // {
            //     t = new Date(year, month, 7, 23, 59, 59);
            // }
            // else if(7<=day && day<14)
            // {
            //     t = new Date(year, month, 14, 23, 59, 59);
            // }
            // else if(14<=day && day<21)
            // {
            //     t = new Date(year, month, 21, 23, 59, 59);
            // }
            // else if(21<=day && day<31)
            // { // если в месяце меньше 31 дня, то Date просто перейдет на следующий месяц
            //     t = new Date(year, month, 31, 23, 59, 59);
            // }

            // new Date(year, month, date, hours, minutes, seconds, ms)
            new CountdownTimer('countdown', new Date(2017, 7, 1, 0, 0, 0));
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

var app = app || {};

(function (body) {
    "use strict";

    app.documents = {
        init: function init() {
            $('body').on('click', '.j-load-documents', function (e) {
                var $button = $(this);
                var motion = $button.data('motion');

                if (motion === 'show') {
                    $button.data('motion', 'hide');
                    $('#documents').find('.is-motion').removeClass('is-hidden');
                } else {
                    $button.data('motion', 'show');

                    $('html, body').stop().animate({ 'scrollTop': $('#documentation-anchor').offset().top }, 'fast');

                    setTimeout(function () {
                        $('#documents').find('.is-motion').addClass('is-hidden');
                    }, 200);
                }

                $button.closest('.page-button').toggleClass('_down').toggleClass('_up');
            });
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLmRvY3VtZW50cy5qcyJdLCJuYW1lcyI6WyJhcHAiLCJkb2N1bWVudHMiLCJpbml0IiwiJCIsIm9uIiwiZSIsIiRidXR0b24iLCJtb3Rpb24iLCJkYXRhIiwiZmluZCIsInJlbW92ZUNsYXNzIiwic3RvcCIsImFuaW1hdGUiLCJvZmZzZXQiLCJ0b3AiLCJzZXRUaW1lb3V0IiwiYWRkQ2xhc3MiLCJjbG9zZXN0IiwidG9nZ2xlQ2xhc3MiLCJkb2N1bWVudCIsImJvZHkiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE1BQU1BLE9BQU8sRUFBakI7O0FBRUEsQ0FBRSxnQkFBUTtBQUNOOztBQUVBQSxRQUFJQyxTQUFKLEdBQWdCO0FBQ1pDLFlBRFksa0JBRVo7QUFDSUMsY0FBRSxNQUFGLEVBQVVDLEVBQVYsQ0FBYSxPQUFiLEVBQXNCLG1CQUF0QixFQUEyQyxVQUFTQyxDQUFULEVBQVk7QUFDbkQsb0JBQU1DLFVBQVVILEVBQUUsSUFBRixDQUFoQjtBQUNBLG9CQUFNSSxTQUFTRCxRQUFRRSxJQUFSLENBQWEsUUFBYixDQUFmOztBQUVBLG9CQUFJRCxXQUFXLE1BQWYsRUFBdUI7QUFDbkJELDRCQUFRRSxJQUFSLENBQWEsUUFBYixFQUF1QixNQUF2QjtBQUNBTCxzQkFBRSxZQUFGLEVBQWdCTSxJQUFoQixDQUFxQixZQUFyQixFQUFtQ0MsV0FBbkMsQ0FBK0MsV0FBL0M7QUFDSCxpQkFIRCxNQUdPO0FBQ0hKLDRCQUFRRSxJQUFSLENBQWEsUUFBYixFQUF1QixNQUF2Qjs7QUFFQUwsc0JBQUUsWUFBRixFQUFnQlEsSUFBaEIsR0FBdUJDLE9BQXZCLENBQStCLEVBQUUsYUFBYVQsRUFBRSx1QkFBRixFQUEyQlUsTUFBM0IsR0FBb0NDLEdBQW5ELEVBQS9CLEVBQXlGLE1BQXpGOztBQUVBQywrQkFBVyxZQUFVO0FBQ2pCWiwwQkFBRSxZQUFGLEVBQWdCTSxJQUFoQixDQUFxQixZQUFyQixFQUFtQ08sUUFBbkMsQ0FBNEMsV0FBNUM7QUFDSCxxQkFGRCxFQUVHLEdBRkg7QUFHSDs7QUFFRFYsd0JBQVFXLE9BQVIsQ0FBZ0IsY0FBaEIsRUFBZ0NDLFdBQWhDLENBQTRDLE9BQTVDLEVBQXFEQSxXQUFyRCxDQUFpRSxLQUFqRTtBQUNILGFBbEJEO0FBbUJIO0FBdEJXLEtBQWhCO0FBeUJILENBNUJELEVBNEJJQyxTQUFTQyxJQTVCYiIsImZpbGUiOiJfX2FwcC5kb2N1bWVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYXBwID0gYXBwIHx8IHt9O1xuXG4oKGJvZHkgPT4ge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwLmRvY3VtZW50cyA9IHtcbiAgICAgICAgaW5pdCAoKVxuICAgICAgICB7XG4gICAgICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5qLWxvYWQtZG9jdW1lbnRzJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0ICRidXR0b24gPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vdGlvbiA9ICRidXR0b24uZGF0YSgnbW90aW9uJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAobW90aW9uID09PSAnc2hvdycpIHtcbiAgICAgICAgICAgICAgICAgICAgJGJ1dHRvbi5kYXRhKCdtb3Rpb24nLCAnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAkKCcjZG9jdW1lbnRzJykuZmluZCgnLmlzLW1vdGlvbicpLnJlbW92ZUNsYXNzKCdpcy1oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkYnV0dG9uLmRhdGEoJ21vdGlvbicsICdzaG93Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLnN0b3AoKS5hbmltYXRlKHsgJ3Njcm9sbFRvcCc6ICQoJyNkb2N1bWVudGF0aW9uLWFuY2hvcicpLm9mZnNldCgpLnRvcCB9LCAnZmFzdCcpO1xuXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNkb2N1bWVudHMnKS5maW5kKCcuaXMtbW90aW9uJykuYWRkQ2xhc3MoJ2lzLWhpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICB9LCAyMDApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICRidXR0b24uY2xvc2VzdCgnLnBhZ2UtYnV0dG9uJykudG9nZ2xlQ2xhc3MoJ19kb3duJykudG9nZ2xlQ2xhc3MoJ191cCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSkoZG9jdW1lbnQuYm9keSk7Il19

var app = app || {};

(function (body) {
    "use strict";

    app.gallery = {
        init: function init() {
            $('.zoom').fancybox();
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLmdhbGxlcnkuanMiXSwibmFtZXMiOlsiYXBwIiwiZ2FsbGVyeSIsImluaXQiLCIkIiwiZmFuY3lib3giLCJkb2N1bWVudCIsImJvZHkiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE1BQU1BLE9BQU8sRUFBakI7O0FBRUEsQ0FBRSxnQkFBUTtBQUNOOztBQUVBQSxRQUFJQyxPQUFKLEdBQWM7QUFDVkMsWUFEVSxrQkFFVjtBQUNJQyxjQUFFLE9BQUYsRUFBV0MsUUFBWDtBQUNIO0FBSlMsS0FBZDtBQU9ILENBVkQsRUFVSUMsU0FBU0MsSUFWYiIsImZpbGUiOiJfX2FwcC5nYWxsZXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGFwcCA9IGFwcCB8fCB7fTtcblxuKChib2R5ID0+IHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGFwcC5nYWxsZXJ5ID0ge1xuICAgICAgICBpbml0ICgpXG4gICAgICAgIHtcbiAgICAgICAgICAgICQoJy56b29tJykuZmFuY3lib3goKTtcbiAgICAgICAgfVxuICAgIH07XG5cbn0pKShkb2N1bWVudC5ib2R5KTsiXX0=

var app = app || {};

(function (body) {
    "use strict";

    app.layzr = {
        init: function init() {
            $(window).lazyLoadXT({
                edgeY: 200,
                srcAttr: 'data-src'
            });

            // $.lazyLoadXT.onload = function() {
            //     var $el = $(this);
            //     $el
            //         .removeClass('lazy-hidden')
            //         .addClass('animated ' + $el.attr('data-effect'));
            // };
            // Slider
            // afterChange: function () {
            //     // $(window).lazyLoadXT();
            //     // $('#timeline-carousel').lazyLoadXT({visibleOnly: false, checkDuplicates: false});
            // }
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLmxheXpyLmpzIl0sIm5hbWVzIjpbImFwcCIsImxheXpyIiwiaW5pdCIsIiQiLCJ3aW5kb3ciLCJsYXp5TG9hZFhUIiwiZWRnZVkiLCJzcmNBdHRyIiwiZG9jdW1lbnQiLCJib2R5Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQSxPQUFPLEVBQWpCOztBQUVBLENBQUUsZ0JBQVE7QUFDTjs7QUFFQUEsUUFBSUMsS0FBSixHQUFZO0FBQ1JDLFlBRFEsa0JBRVI7QUFDSUMsY0FBRUMsTUFBRixFQUFVQyxVQUFWLENBQXFCO0FBQ2pCQyx1QkFBUSxHQURTO0FBRWpCQyx5QkFBUztBQUZRLGFBQXJCOztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDSDtBQW5CTyxLQUFaO0FBc0JILENBekJELEVBeUJJQyxTQUFTQyxJQXpCYiIsImZpbGUiOiJfX2FwcC5sYXl6ci5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBhcHAgPSBhcHAgfHwge307XG5cbigoYm9keSA9PiB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICBhcHAubGF5enIgPSB7XG4gICAgICAgIGluaXQgKClcbiAgICAgICAge1xuICAgICAgICAgICAgJCh3aW5kb3cpLmxhenlMb2FkWFQoe1xuICAgICAgICAgICAgICAgIGVkZ2VZOiAgMjAwLFxuICAgICAgICAgICAgICAgIHNyY0F0dHI6ICdkYXRhLXNyYydcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyAkLmxhenlMb2FkWFQub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyAgICAgdmFyICRlbCA9ICQodGhpcyk7XG4gICAgICAgICAgICAvLyAgICAgJGVsXG4gICAgICAgICAgICAvLyAgICAgICAgIC5yZW1vdmVDbGFzcygnbGF6eS1oaWRkZW4nKVxuICAgICAgICAgICAgLy8gICAgICAgICAuYWRkQ2xhc3MoJ2FuaW1hdGVkICcgKyAkZWwuYXR0cignZGF0YS1lZmZlY3QnKSk7XG4gICAgICAgICAgICAvLyB9O1xuICAgICAgICAgICAgLy8gU2xpZGVyXG4gICAgICAgICAgICAvLyBhZnRlckNoYW5nZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8gICAgIC8vICQod2luZG93KS5sYXp5TG9hZFhUKCk7XG4gICAgICAgICAgICAvLyAgICAgLy8gJCgnI3RpbWVsaW5lLWNhcm91c2VsJykubGF6eUxvYWRYVCh7dmlzaWJsZU9ubHk6IGZhbHNlLCBjaGVja0R1cGxpY2F0ZXM6IGZhbHNlfSk7XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSkoZG9jdW1lbnQuYm9keSk7XG4iXX0=

var app = app || {};

(function (body) {
    "use strict";

    app.mask = {
        bind: function bind() {
            var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.mask-phone';

            new Cleave(selector, {
                phone: true,
                phoneRegionCode: 'ru'
            });
        },
        init: function init() {
            var _this_ = this;

            _this_.bind();

            $('body').on('popup.after_open', function (e, popup) {

                setTimeout(function () {
                    _this_.bind($(popup).find('.mask-phone'));
                }, 100);
            });
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLm1hc2suanMiXSwibmFtZXMiOlsiYXBwIiwibWFzayIsImJpbmQiLCJzZWxlY3RvciIsIkNsZWF2ZSIsInBob25lIiwicGhvbmVSZWdpb25Db2RlIiwiaW5pdCIsIl90aGlzXyIsIiQiLCJvbiIsImUiLCJwb3B1cCIsInNldFRpbWVvdXQiLCJmaW5kIiwiZG9jdW1lbnQiLCJib2R5Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQSxPQUFPLEVBQWpCOztBQUVBLENBQUUsZ0JBQVE7QUFDTjs7QUFFQUEsUUFBSUMsSUFBSixHQUFXO0FBQ1BDLFlBRE8sa0JBQ3dCO0FBQUEsZ0JBQTFCQyxRQUEwQix1RUFBZixhQUFlOztBQUMzQixnQkFBSUMsTUFBSixDQUFXRCxRQUFYLEVBQXFCO0FBQ2pCRSx1QkFBTyxJQURVO0FBRWpCQyxpQ0FBaUI7QUFGQSxhQUFyQjtBQUlILFNBTk07QUFRUEMsWUFSTyxrQkFRQTtBQUNILGdCQUFNQyxTQUFTLElBQWY7O0FBRUFBLG1CQUFPTixJQUFQOztBQUVBTyxjQUFFLE1BQUYsRUFBVUMsRUFBVixDQUFhLGtCQUFiLEVBQWlDLFVBQVNDLENBQVQsRUFBWUMsS0FBWixFQUFtQjs7QUFFaERDLDJCQUFXLFlBQU07QUFDYkwsMkJBQU9OLElBQVAsQ0FBWU8sRUFBRUcsS0FBRixFQUFTRSxJQUFULENBQWMsYUFBZCxDQUFaO0FBQ0gsaUJBRkQsRUFFRyxHQUZIO0FBR0gsYUFMRDtBQU1IO0FBbkJNLEtBQVg7QUFzQkgsQ0F6QkQsRUF5QklDLFNBQVNDLElBekJiIiwiZmlsZSI6Il9fYXBwLm1hc2suanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYXBwID0gYXBwIHx8IHt9O1xuXG4oKGJvZHkgPT4ge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwLm1hc2sgPSB7XG4gICAgICAgIGJpbmQoc2VsZWN0b3IgPSAnLm1hc2stcGhvbmUnKSB7XG4gICAgICAgICAgICBuZXcgQ2xlYXZlKHNlbGVjdG9yLCB7XG4gICAgICAgICAgICAgICAgcGhvbmU6IHRydWUsXG4gICAgICAgICAgICAgICAgcGhvbmVSZWdpb25Db2RlOiAncnUnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0KCkge1xuICAgICAgICAgICAgY29uc3QgX3RoaXNfID0gdGhpcztcblxuICAgICAgICAgICAgX3RoaXNfLmJpbmQoKTtcblxuICAgICAgICAgICAgJCgnYm9keScpLm9uKCdwb3B1cC5hZnRlcl9vcGVuJywgZnVuY3Rpb24oZSwgcG9wdXApIHtcblxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBfdGhpc18uYmluZCgkKHBvcHVwKS5maW5kKCcubWFzay1waG9uZScpKTtcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSkoZG9jdW1lbnQuYm9keSk7Il19

var app = app || {};

(function (body) {
    "use strict";

    var isAnimated = false;

    var History = window.History;

    var isMobile = $(window).width() <= 667;
    var $hasScroll = $('html, body');
    var $navigation = $('#navigation');
    var navHeight = $navigation.height();
    var winHeight = $(window).height();

    app.navigation = {

        elements: [],

        compose: function compose() {
            this.elements = $('.j-section').map(function (key, item) {
                return {
                    offset: $(item).offset().top - navHeight,
                    element: $(item)
                };
            });
        },
        scrollToAnchor: function scrollToAnchor(hash, animate) {
            hash = hash.split('?')[0];

            var $target = $('#' + hash + '-anchor');

            if ($target.length) {
                isAnimated = true;
                var top = $target.offset().top - navHeight;

                if (animate) {
                    $hasScroll.stop().animate({ 'scrollTop': top }, 'medium', function () {
                        isAnimated = false;
                        $navigation.removeClass('is-disabled');
                    });
                } else {
                    $hasScroll.scrollTop(top);
                }
            }
        },
        setCurrent: function setCurrent($current, slug, title) {
            $navigation.find('.j-navigation.is-current').removeClass('is-current');
            $current.addClass('is-current');

            History.pushState(null, title, slug);
        },
        changeItem: function changeItem(scrollTop) {
            var $element = null;

            this.elements.map(function (key, item) {
                var element = item.element;

                if (scrollTop > item.offset - winHeight / 4) {
                    $element = element;
                }
            });

            if ($element !== null && $element.attr('id')) {
                var title = $element.data('title') || '';
                var slug = $element.attr('id').split('-')[0];
                var $current = $navigation.find('.j-navigation[href="/' + slug + '"]');

                if (!$current.hasClass('is-current')) {
                    this.setCurrent($current, slug, title);
                }
            }
        },
        check: function check() {
            var State = History.getState();

            if (State.url) {
                var slug = State.url.split('/')[3];
                var $current = $navigation.find('.j-navigation[href="/' + slug + '"]');

                this.setCurrent($current, slug, $('#' + slug + '-anchor').data('title'));
            }
        },
        init: function init() {
            var _this = this;

            $('body').on('click', '.j-navigation', function (e) {
                e.preventDefault();

                var $current = $(this);
                var slug = $current.attr('href').substr(1);
                $navigation.addClass('is-disabled');

                _this.scrollToAnchor(slug, true);
                _this.setCurrent($current, slug, $('#' + slug + '-anchor').data('title'));
            });

            setTimeout(function () {
                _this.compose();
                _this.check();
            }, 50);

            var last = Date.now();

            $(window).scroll(function () {
                if (!isAnimated) {
                    var differance = Date.now() - last;

                    if (differance >= 500) {
                        _this.changeItem($(window).scrollTop());
                        last = Date.now();
                    }
                }
            });
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

var app = app || {};

(function (body) {
    "use strict";

    app.popup = {
        init: function init() {
            $.popup.init('.j-open-popup', {
                hashChange: false,
                cssPosition: false,
                wrapper: '.layout-wrapper'
            });
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLnBvcHVwLmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcHVwIiwiaW5pdCIsIiQiLCJoYXNoQ2hhbmdlIiwiY3NzUG9zaXRpb24iLCJ3cmFwcGVyIiwiZG9jdW1lbnQiLCJib2R5Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQSxPQUFPLEVBQWpCOztBQUVBLENBQUUsZ0JBQVE7QUFDTjs7QUFFQUEsUUFBSUMsS0FBSixHQUFZO0FBQ1JDLGNBQU0sZ0JBQ047QUFDSUMsY0FBRUYsS0FBRixDQUFRQyxJQUFSLENBQWEsZUFBYixFQUE4QjtBQUMxQkUsNEJBQVksS0FEYztBQUUxQkMsNkJBQWEsS0FGYTtBQUcxQkMseUJBQVM7QUFIaUIsYUFBOUI7QUFLSDtBQVJPLEtBQVo7QUFXSCxDQWRELEVBY0lDLFNBQVNDLElBZGIiLCJmaWxlIjoiX19hcHAucG9wdXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYXBwID0gYXBwIHx8IHt9O1xuXG4oKGJvZHkgPT4ge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwLnBvcHVwID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAgICQucG9wdXAuaW5pdCgnLmotb3Blbi1wb3B1cCcsIHtcbiAgICAgICAgICAgICAgICBoYXNoQ2hhbmdlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBjc3NQb3NpdGlvbjogZmFsc2UsXG4gICAgICAgICAgICAgICAgd3JhcHBlcjogJy5sYXlvdXQtd3JhcHBlcidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxufSkpKGRvY3VtZW50LmJvZHkpOyJdfQ==

var app = app || {};

;(function (body) {
    "use strict";

    var _this;

    app.sandwich = {

        config: {
            keyHooks: !1,
            selector: '.js-sandwich-menu',
            wrapper: '.layout-wrapper',
            overlay: '.overlay'
        },

        extend: function extend(config) {
            _this = this;

            if (typeof config !== 'undefined') {
                var x;
                for (x in config) {
                    if (typeof _this.config[x] !== 'undefined') _this.config[x] = config[x];
                }
            }
        },

        isOpen: function isOpen() {
            return $('body').hasClass('page-visible');
        },

        hide: function hide() {
            $('body').removeClass('page-open');

            setTimeout(function () {
                $('body').removeClass('page-visible');
            }, 10);

            $(this.config.overlay).css({
                'visibility': 'hidden'
            });
        },

        toggle: function toggle() {
            if ($('body').hasClass('page-visible')) {
                $('body').removeClass('page-open');

                setTimeout(function () {
                    $('body').removeClass('page-visible');
                }, 200);
            } else {
                $('body').addClass('page-open');

                setTimeout(function () {
                    $('body').addClass('page-visible');
                }, 10);
            }

            var visibility = 'visible';

            if (!$('body').hasClass('page-open')) {
                visibility = 'hidden';
            }

            $(_this.config.overlay).css({
                'visibility': visibility
            });
        },

        sandwichTrigger: function sandwichTrigger() {
            _this = this;

            if (_this.config.keyHooks) {
                $('body').on('keydown', function (e) {
                    if (e.keyCode == 27 && _this.isOpen()) {
                        _this.toggle();
                    }
                });
            };

            $('body').on('click', _this.config.selector, function (e) {
                e.preventDefault ? e.preventDefault() : e.returnValue = false;
                _this.toggle();
            });
        },

        overlayTrigger: function overlayTrigger() {
            _this = this;

            $('body').on('click', _this.config.overlay, function (e) {
                _this.hide();
            });
        },

        init: function init() {
            this.extend({
                keyHooks: !0,
                selector: '.js-sandwich-menu',
                wrapper: '.layout-wrapper',
                overlay: '#menu-overlay'
            });

            this.sandwichTrigger();
            this.overlayTrigger();
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLnNhbmR3aWNoLmpzIl0sIm5hbWVzIjpbImFwcCIsImJvZHkiLCJfdGhpcyIsInNhbmR3aWNoIiwiY29uZmlnIiwia2V5SG9va3MiLCJzZWxlY3RvciIsIndyYXBwZXIiLCJvdmVybGF5IiwiZXh0ZW5kIiwieCIsImlzT3BlbiIsIiQiLCJoYXNDbGFzcyIsImhpZGUiLCJyZW1vdmVDbGFzcyIsInNldFRpbWVvdXQiLCJjc3MiLCJ0b2dnbGUiLCJhZGRDbGFzcyIsInZpc2liaWxpdHkiLCJzYW5kd2ljaFRyaWdnZXIiLCJvbiIsImUiLCJrZXlDb2RlIiwicHJldmVudERlZmF1bHQiLCJyZXR1cm5WYWx1ZSIsIm92ZXJsYXlUcmlnZ2VyIiwiaW5pdCIsImRvY3VtZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQSxPQUFPLEVBQWpCOztBQUVBLENBQUMsQ0FBQyxVQUFTQyxJQUFULEVBQWM7QUFDWjs7QUFFQSxRQUFJQyxLQUFKOztBQUVBRixRQUFJRyxRQUFKLEdBQWU7O0FBRVhDLGdCQUFRO0FBQ0pDLHNCQUFVLENBQUMsQ0FEUDtBQUVKQyxzQkFBVSxtQkFGTjtBQUdKQyxxQkFBUyxpQkFITDtBQUlKQyxxQkFBUztBQUpMLFNBRkc7O0FBU1hDLGdCQUFRLGdCQUFTTCxNQUFULEVBQ1I7QUFDSUYsb0JBQVEsSUFBUjs7QUFFQSxnQkFBSSxPQUFPRSxNQUFQLEtBQWtCLFdBQXRCLEVBQ0E7QUFDSSxvQkFBSU0sQ0FBSjtBQUNBLHFCQUFLQSxDQUFMLElBQVVOLE1BQVYsRUFDQTtBQUNJLHdCQUFJLE9BQU9GLE1BQU1FLE1BQU4sQ0FBYU0sQ0FBYixDQUFQLEtBQTJCLFdBQS9CLEVBQ0lSLE1BQU1FLE1BQU4sQ0FBYU0sQ0FBYixJQUFrQk4sT0FBT00sQ0FBUCxDQUFsQjtBQUNQO0FBQ0o7QUFDSixTQXRCVTs7QUF3QlhDLGdCQUFRLGtCQUNSO0FBQ0ksbUJBQU9DLEVBQUUsTUFBRixFQUFVQyxRQUFWLENBQW1CLGNBQW5CLENBQVA7QUFDSCxTQTNCVTs7QUE2QlhDLGNBQU0sZ0JBQ047QUFDSUYsY0FBRSxNQUFGLEVBQVVHLFdBQVYsQ0FBc0IsV0FBdEI7O0FBRUFDLHVCQUFXLFlBQVU7QUFDakJKLGtCQUFFLE1BQUYsRUFBVUcsV0FBVixDQUFzQixjQUF0QjtBQUNILGFBRkQsRUFFRyxFQUZIOztBQUlBSCxjQUFFLEtBQUtSLE1BQUwsQ0FBWUksT0FBZCxFQUF1QlMsR0FBdkIsQ0FBMkI7QUFDdkIsOEJBQWM7QUFEUyxhQUEzQjtBQUdILFNBeENVOztBQTBDWEMsZ0JBQVEsa0JBQ1I7QUFDSSxnQkFBSU4sRUFBRSxNQUFGLEVBQVVDLFFBQVYsQ0FBbUIsY0FBbkIsQ0FBSixFQUNBO0FBQ0lELGtCQUFFLE1BQUYsRUFBVUcsV0FBVixDQUFzQixXQUF0Qjs7QUFFQUMsMkJBQVcsWUFBVTtBQUNqQkosc0JBQUUsTUFBRixFQUFVRyxXQUFWLENBQXNCLGNBQXRCO0FBQ0gsaUJBRkQsRUFFRyxHQUZIO0FBR0gsYUFQRCxNQVNBO0FBQ0lILGtCQUFFLE1BQUYsRUFBVU8sUUFBVixDQUFtQixXQUFuQjs7QUFFQUgsMkJBQVcsWUFBVTtBQUNqQkosc0JBQUUsTUFBRixFQUFVTyxRQUFWLENBQW1CLGNBQW5CO0FBQ0gsaUJBRkQsRUFFRyxFQUZIO0FBR0g7O0FBRUQsZ0JBQUlDLGFBQWEsU0FBakI7O0FBRUEsZ0JBQUksQ0FBQ1IsRUFBRSxNQUFGLEVBQVVDLFFBQVYsQ0FBbUIsV0FBbkIsQ0FBTCxFQUNBO0FBQ0lPLDZCQUFhLFFBQWI7QUFDSDs7QUFFRFIsY0FBRVYsTUFBTUUsTUFBTixDQUFhSSxPQUFmLEVBQXdCUyxHQUF4QixDQUE0QjtBQUN4Qiw4QkFBY0c7QUFEVSxhQUE1QjtBQUdILFNBdkVVOztBQXlFWEMseUJBQWlCLDJCQUNqQjtBQUNJbkIsb0JBQVEsSUFBUjs7QUFFQSxnQkFBSUEsTUFBTUUsTUFBTixDQUFhQyxRQUFqQixFQUNBO0FBQ0lPLGtCQUFFLE1BQUYsRUFBVVUsRUFBVixDQUFhLFNBQWIsRUFBd0IsVUFBU0MsQ0FBVCxFQUFZO0FBQ2hDLHdCQUFHQSxFQUFFQyxPQUFGLElBQWEsRUFBYixJQUFtQnRCLE1BQU1TLE1BQU4sRUFBdEIsRUFDQTtBQUNJVCw4QkFBTWdCLE1BQU47QUFDSDtBQUNKLGlCQUxEO0FBTUg7O0FBRUROLGNBQUUsTUFBRixFQUFVVSxFQUFWLENBQWEsT0FBYixFQUFzQnBCLE1BQU1FLE1BQU4sQ0FBYUUsUUFBbkMsRUFBNkMsVUFBU2lCLENBQVQsRUFBVztBQUNwREEsa0JBQUVFLGNBQUYsR0FBbUJGLEVBQUVFLGNBQUYsRUFBbkIsR0FBd0NGLEVBQUVHLFdBQUYsR0FBZ0IsS0FBeEQ7QUFDQXhCLHNCQUFNZ0IsTUFBTjtBQUNILGFBSEQ7QUFJSCxTQTNGVTs7QUE2RlhTLHdCQUFnQiwwQkFDaEI7QUFDSXpCLG9CQUFRLElBQVI7O0FBRUFVLGNBQUUsTUFBRixFQUFVVSxFQUFWLENBQWEsT0FBYixFQUFzQnBCLE1BQU1FLE1BQU4sQ0FBYUksT0FBbkMsRUFBNEMsVUFBU2UsQ0FBVCxFQUFXO0FBQ25EckIsc0JBQU1ZLElBQU47QUFDSCxhQUZEO0FBR0gsU0FwR1U7O0FBc0dYYyxjQUFNLGdCQUNOO0FBQ0ksaUJBQUtuQixNQUFMLENBQVk7QUFDUkosMEJBQVUsQ0FBQyxDQURIO0FBRVJDLDBCQUFVLG1CQUZGO0FBR1JDLHlCQUFTLGlCQUhEO0FBSVJDLHlCQUFTO0FBSkQsYUFBWjs7QUFPQSxpQkFBS2EsZUFBTDtBQUNBLGlCQUFLTSxjQUFMO0FBQ0g7QUFqSFUsS0FBZjtBQW9ISCxDQXpIQSxFQXlIRUUsU0FBUzVCLElBekhYIiwiZmlsZSI6Il9fYXBwLnNhbmR3aWNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFwcCB8fCB7fTtcblxuOyhmdW5jdGlvbihib2R5KXtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHZhciBfdGhpcztcblxuICAgIGFwcC5zYW5kd2ljaCA9IHtcblxuICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgIGtleUhvb2tzOiAhMSxcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnLmpzLXNhbmR3aWNoLW1lbnUnLFxuICAgICAgICAgICAgd3JhcHBlcjogJy5sYXlvdXQtd3JhcHBlcicsXG4gICAgICAgICAgICBvdmVybGF5OiAnLm92ZXJsYXknXG4gICAgICAgIH0sXG5cbiAgICAgICAgZXh0ZW5kOiBmdW5jdGlvbihjb25maWcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgIT09ICd1bmRlZmluZWQnKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHZhciB4O1xuICAgICAgICAgICAgICAgIGZvciAoeCBpbiBjb25maWcpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIF90aGlzLmNvbmZpZ1t4XSAhPT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5jb25maWdbeF0gPSBjb25maWdbeF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGlzT3BlbjogZnVuY3Rpb24oKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gJCgnYm9keScpLmhhc0NsYXNzKCdwYWdlLXZpc2libGUnKTtcbiAgICAgICAgfSxcblxuICAgICAgICBoaWRlOiBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygncGFnZS1vcGVuJyk7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ3BhZ2UtdmlzaWJsZScpO1xuICAgICAgICAgICAgfSwgMTApO1xuXG4gICAgICAgICAgICAkKHRoaXMuY29uZmlnLm92ZXJsYXkpLmNzcyh7XG4gICAgICAgICAgICAgICAgJ3Zpc2liaWxpdHknOiAnaGlkZGVuJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdG9nZ2xlOiBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3BhZ2UtdmlzaWJsZScpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygncGFnZS1vcGVuJyk7XG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygncGFnZS12aXNpYmxlJyk7XG4gICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ3BhZ2Utb3BlbicpO1xuXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ3BhZ2UtdmlzaWJsZScpO1xuICAgICAgICAgICAgICAgIH0sIDEwKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG5cbiAgICAgICAgICAgIGlmICghJCgnYm9keScpLmhhc0NsYXNzKCdwYWdlLW9wZW4nKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5ID0gJ2hpZGRlbidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJChfdGhpcy5jb25maWcub3ZlcmxheSkuY3NzKHtcbiAgICAgICAgICAgICAgICAndmlzaWJpbGl0eSc6IHZpc2liaWxpdHlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNhbmR3aWNoVHJpZ2dlcjogZnVuY3Rpb24oKVxuICAgICAgICB7XG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICAgIGlmIChfdGhpcy5jb25maWcua2V5SG9va3MpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgJCgnYm9keScpLm9uKCdrZXlkb3duJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICBpZihlLmtleUNvZGUgPT0gMjcgJiYgX3RoaXMuaXNPcGVuKCkpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnRvZ2dsZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgX3RoaXMuY29uZmlnLnNlbGVjdG9yLCBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0ID8gZS5wcmV2ZW50RGVmYXVsdCgpIDogZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIF90aGlzLnRvZ2dsZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb3ZlcmxheVRyaWdnZXI6IGZ1bmN0aW9uKClcbiAgICAgICAge1xuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgX3RoaXMuY29uZmlnLm92ZXJsYXksIGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgIF90aGlzLmhpZGUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5leHRlbmQoe1xuICAgICAgICAgICAgICAgIGtleUhvb2tzOiAhMCxcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJy5qcy1zYW5kd2ljaC1tZW51JyxcbiAgICAgICAgICAgICAgICB3cmFwcGVyOiAnLmxheW91dC13cmFwcGVyJyxcbiAgICAgICAgICAgICAgICBvdmVybGF5OiAnI21lbnUtb3ZlcmxheSdcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0aGlzLnNhbmR3aWNoVHJpZ2dlcigpO1xuICAgICAgICAgICAgdGhpcy5vdmVybGF5VHJpZ2dlcigpO1xuICAgICAgICB9XG4gICAgfTtcblxufSkoZG9jdW1lbnQuYm9keSk7Il19

var app = app || {};

(function (body) {
    "use strict";

    var $slider = $('#carousel-slider');

    app.slider = {

        count: 0,
        current: 0,
        timeout: 6000,
        interval: null,

        drop: function drop(callback) {
            var $target = $slider.find('.j-slide.is-active');

            $target.addClass('is-last-active');
            $target.removeClass('is-active');

            callback();
        },
        bind: function bind() {
            var $target = $slider.find('.j-slide').eq(this.current - 1);

            $target.addClass('is-active');

            this.activateDot();

            setTimeout(function () {
                $slider.find('.j-slide.is-last-active').removeClass('is-last-active');
            }, 1000);

            this.startInterval();
        },
        prev: function prev() {
            var _this = this;

            _this.stopInterval();

            _this.drop(function () {
                _this.current -= 1;

                if (_this.current === 0) {
                    _this.current = _this.count;
                }

                _this.bind();
            });
        },
        next: function next() {
            var _this = this;

            _this.stopInterval();

            _this.drop(function () {
                _this.current += 1;

                if (_this.current >= _this.count) {
                    _this.current = 0;
                }

                _this.bind();
            });
        },
        goTo: function goTo(index) {
            var _this = this;

            _this.stopInterval();

            _this.drop(function () {
                _this.current = index;
                _this.bind();
            });
        },
        dots: function dots() {
            var i = 0;
            var item = '';
            var dots = [];
            var _this = this;

            for (i = 0; i < _this.count; i++) {
                if (i === 0) {
                    item = '<a href="#' + i + '" class="s-slider__dots__item j-slider-goto is-active"></a>';
                } else {
                    item = '<a href="#' + i + '" class="s-slider__dots__item j-slider-goto"></a>';
                }

                dots.push(item);
            }

            _this.dotsItem.html(dots.join(''));
            _this.dotsItem.addClass('is-active');

            $('body').on('click', '.j-slider-goto', function (e) {
                e.preventDefault();

                if (!$(this).hasClass('is-active')) {
                    _this.goTo($(this).attr('href').substr(-1));
                }
            });
        },
        activateDot: function activateDot() {
            this.dotsItem.find('.j-slider-goto.is-active').removeClass('is-active');
            this.dotsItem.find('.j-slider-goto').eq(this.current).addClass('is-active');
        },
        events: function events() {
            var _this2 = this;

            this.arrowPrev.on('click', function (e) {
                e.preventDefault();
                _this2.prev();
            });

            this.arrowNext.on('click', function (e) {
                e.preventDefault();
                _this2.next();
            });
        },
        stopInterval: function stopInterval() {
            clearInterval(this.interval);
        },
        startInterval: function startInterval() {
            var _this3 = this;

            this.interval = setInterval(function () {
                _this3.next();
            }, this.timeout);
        },
        make: function make() {
            this.count = $slider.find('.j-slide').length;
            this.current = $slider.find('.j-slide.is-active').index();

            this.dotsItem = $('#carousel-slider--dots');
            this.arrowPrev = $('#carousel-slider--prev');
            this.arrowNext = $('#carousel-slider--next');

            this.arrowPrev.addClass('is-active');
            this.arrowNext.addClass('is-active');

            this.dots();

            this.events();

            this.startInterval();
        },
        init: function init() {
            if ($slider.length && $slider.find('.j-slide').length) {
                this.make();
            }
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

var app = app || {};

(function (body) {
    "use strict";

    app.tabs = {
        init: function init() {
            var $tabs = void 0;

            $('body').on('click', '.j-tabs-trigger', function (e) {
                e.preventDefault();
                var $current = $(this);

                if (!$current.hasClass('is-current')) {
                    var target = $current.data('target');

                    // Clear
                    $tabs = $(this).closest('.j-tabs');
                    $tabs.find('.is-current').removeClass('is-current');
                    $tabs.find('.j-tabs-content').removeClass('is-active');

                    // Set current
                    $current.addClass('is-current');
                    $tabs.find('.j-tabs-content[data-system="' + target + '"]').addClass('is-active');

                    if ($current.hasClass('j-tabs-carousel')) {
                        app.carousel.main('reload', target);
                    }
                }

                return !1;
            });
        }

    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLnRhYnMuanMiXSwibmFtZXMiOlsiYXBwIiwiYm9keSIsInRhYnMiLCJpbml0IiwiJHRhYnMiLCIkIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCIkY3VycmVudCIsImhhc0NsYXNzIiwidGFyZ2V0IiwiZGF0YSIsImNsb3Nlc3QiLCJmaW5kIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImNhcm91c2VsIiwibWFpbiIsImRvY3VtZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQSxPQUFPLEVBQWpCOztBQUVBLENBQUMsVUFBU0MsSUFBVCxFQUFjO0FBQ1g7O0FBRUFELFFBQUlFLElBQUosR0FBVztBQUNQQyxjQUFNLGdCQUNOO0FBQ0ksZ0JBQUlDLGNBQUo7O0FBRUFDLGNBQUUsTUFBRixFQUFVQyxFQUFWLENBQWEsT0FBYixFQUFzQixpQkFBdEIsRUFBeUMsVUFBU0MsQ0FBVCxFQUFXO0FBQ2hEQSxrQkFBRUMsY0FBRjtBQUNBLG9CQUFNQyxXQUFXSixFQUFFLElBQUYsQ0FBakI7O0FBRUEsb0JBQUksQ0FBQ0ksU0FBU0MsUUFBVCxDQUFrQixZQUFsQixDQUFMLEVBQ0E7QUFDSSx3QkFBTUMsU0FBU0YsU0FBU0csSUFBVCxDQUFjLFFBQWQsQ0FBZjs7QUFFQTtBQUNBUiw0QkFBUUMsRUFBRSxJQUFGLEVBQVFRLE9BQVIsQ0FBZ0IsU0FBaEIsQ0FBUjtBQUNBVCwwQkFBTVUsSUFBTixDQUFXLGFBQVgsRUFBMEJDLFdBQTFCLENBQXNDLFlBQXRDO0FBQ0FYLDBCQUFNVSxJQUFOLENBQVcsaUJBQVgsRUFBOEJDLFdBQTlCLENBQTBDLFdBQTFDOztBQUVBO0FBQ0FOLDZCQUFTTyxRQUFULENBQWtCLFlBQWxCO0FBQ0FaLDBCQUFNVSxJQUFOLENBQVcsa0NBQWdDSCxNQUFoQyxHQUF1QyxJQUFsRCxFQUF3REssUUFBeEQsQ0FBaUUsV0FBakU7O0FBRUEsd0JBQUlQLFNBQVNDLFFBQVQsQ0FBa0IsaUJBQWxCLENBQUosRUFBMEM7QUFDdENWLDRCQUFJaUIsUUFBSixDQUFhQyxJQUFiLENBQWtCLFFBQWxCLEVBQTRCUCxNQUE1QjtBQUNIO0FBQ0o7O0FBRUQsdUJBQU8sQ0FBQyxDQUFSO0FBQ0gsYUF2QkQ7QUF3Qkg7O0FBN0JNLEtBQVg7QUFpQ0gsQ0FwQ0QsRUFvQ0dRLFNBQVNsQixJQXBDWiIsImZpbGUiOiJfX2FwcC50YWJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFwcCB8fCB7fTtcblxuKGZ1bmN0aW9uKGJvZHkpe1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwLnRhYnMgPSB7XG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKClcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0ICR0YWJzO1xuXG4gICAgICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5qLXRhYnMtdHJpZ2dlcicsIGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCAkY3VycmVudCA9ICQodGhpcyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoISRjdXJyZW50Lmhhc0NsYXNzKCdpcy1jdXJyZW50JykpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSAkY3VycmVudC5kYXRhKCd0YXJnZXQnKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBDbGVhclxuICAgICAgICAgICAgICAgICAgICAkdGFicyA9ICQodGhpcykuY2xvc2VzdCgnLmotdGFicycpO1xuICAgICAgICAgICAgICAgICAgICAkdGFicy5maW5kKCcuaXMtY3VycmVudCcpLnJlbW92ZUNsYXNzKCdpcy1jdXJyZW50Jyk7XG4gICAgICAgICAgICAgICAgICAgICR0YWJzLmZpbmQoJy5qLXRhYnMtY29udGVudCcpLnJlbW92ZUNsYXNzKCdpcy1hY3RpdmUnKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBTZXQgY3VycmVudFxuICAgICAgICAgICAgICAgICAgICAkY3VycmVudC5hZGRDbGFzcygnaXMtY3VycmVudCcpO1xuICAgICAgICAgICAgICAgICAgICAkdGFicy5maW5kKCcuai10YWJzLWNvbnRlbnRbZGF0YS1zeXN0ZW09XCInK3RhcmdldCsnXCJdJykuYWRkQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICgkY3VycmVudC5oYXNDbGFzcygnai10YWJzLWNhcm91c2VsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcC5jYXJvdXNlbC5tYWluKCdyZWxvYWQnLCB0YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbn0pKGRvY3VtZW50LmJvZHkpOyJdfQ==

var app = app || {};

(function (body) {
    'use strict';

    app.timeline = {

        data: {},
        filter: null,
        years: null,
        months: null,

        _initCarousel: function _initCarousel() {
            var width = $(window).width(),
                slides = $('#timeline-carousel').find('.slick-slide').length;

            if (width > 768 && slides >= 4 || width > 568 && slides >= 3 || width > 375 && slides >= 2 || width < 375 && slides >= 1) {
                $('#timeline-carousel').slick({
                    dots: false,
                    infinite: true,
                    draggable: true,
                    speed: 259,
                    slidesToShow: 4,
                    slidesToScroll: 1,
                    prevArrow: '<button class="carousel__nav carousel__nav--left slick-prev"><svg class="carousel__nav__ico" role="image"><use xlink:href="#left-arrow"/></svg></button>',
                    nextArrow: '<button class="carousel__nav carousel__nav--right slick-next"><svg class="carousel__nav__ico" role="image"><use xlink:href="#right-arrow"/></svg></button>',
                    responsive: [{
                        breakpoint: 768,
                        settings: {
                            slidesToShow: 3,
                            slidesToScroll: 3
                        }
                    }, {
                        breakpoint: 568,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2
                        }
                    }, {
                        breakpoint: 375,
                        settings: {
                            fade: true,
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    }]
                });
            }
        },
        _currentYear: function _currentYear() {
            return parseInt(this.years.find('.is-current').data('value'));
        },
        _currentMonth: function _currentMonth() {
            return parseInt(this.months.find('.is-current').data('value'));
        },
        _handle: function _handle() {
            var _this = this;

            this.data.current = this._currentYear();
            this.data.months = [];

            this.months.find('.j-timeline-months-item').each(function (key, item) {
                var years = [],
                    strings = $(item).data('if') + '';

                if (typeof strings !== 'undefined' && strings !== '') {
                    years = strings.split(',');

                    for (var x in years) {
                        years[x] = parseInt(years[x]);
                    }
                }

                _this.data.months.push({
                    item: item,
                    year: years
                });
            });
        },
        _reinitCarousel: function _reinitCarousel() {
            var _self_ = this,
                year = this._currentYear(),
                month = this._currentMonth();

            if ($('#timeline-carousel').hasClass('slick-initialized')) {
                $('#timeline-carousel').slick('unslick');
            }

            // $('#timeline-carousel').html('');

            // var count = $('#timeline-cache').find('.carousel__item.is-year-'+ year +'.is-month-'+month).length;

            // $('#timeline-cache').find('.carousel__item.is-year-'+ year +'.is-month-'+month).each(function(k, item) {
            //     $('#timeline-carousel').append($(this).clone());

            //     if ((k+1) == count) {
            //         setTimeout(function() {
            //             _self_._initCarousel();
            //         }, 50);
            //     }
            // });

            // setTimeout(function() {
            //     $('.zoom').fancybox();
            // }, 300);

            _self_._initCarousel();
        },
        _changeFirstMonth: function _changeFirstMonth() {
            this.months.find('.j-timeline-months-item.is-active:first').trigger('click');
        },
        _match: function _match() {
            var _this2 = this;

            var _self_ = this;

            this._handle();

            this.months.find('.j-timeline-months-item').removeClass('is-active');

            $.each(this.data.months, function (k, item) {
                if (item.year.indexOf(_this2.data.current) >= 0) {
                    $(item.item).addClass('is-active');
                }
            });

            this.filter.addClass('is-active');
        },
        _events: function _events() {
            var _self_ = this;

            this.years.find('.j-timeline-years-item').on('click', function (e) {
                e.preventDefault();

                if (!$(this).hasClass('is-current')) {
                    $('#timeline-filter').find('.j-timeline-years').find('.is-current').removeClass('is-current');

                    $(this).addClass('is-current');

                    _self_._match();
                    _self_._changeFirstMonth();
                    _self_._reinitCarousel();
                }
            });

            this.months.find('.j-timeline-months-item').on('click', function (e) {
                e.preventDefault();

                if (!$(this).hasClass('is-current')) {
                    $('#timeline-filter').find('.j-timeline-months').find('.is-current').removeClass('is-current');

                    $(this).addClass('is-current');

                    _self_._match();
                    _self_._reinitCarousel();
                }
            });
        },
        init: function init() {
            this.filter = $('#timeline-filter');
            this.years = this.filter.find('.j-timeline-years');
            this.months = this.filter.find('.j-timeline-months');

            this._match();
            this._events();

            this._reinitCarousel();
        }
    };
})(document.body);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

function yandexMap() {
    ymaps.ready(function () {
        var YMap,
            myPlacemark,
            is_mobile = $(window).width() <= 667;

        YMap = new ymaps.Map('location-map', {
            center: [44.970930, 38.934538],
            zoom: 18,
            controls: ['zoomControl', 'fullscreenControl']
        });

        YMap.behaviors.disable('multiTouch');
        YMap.behaviors.disable('scrollZoom');
        YMap.controls.get('zoomControl').options.set('size', 'small');
        YMap.controls.get('zoomControl').options.set('position', { right: 10, top: 50 });

        if (is_mobile) {
            YMap.behaviors.disable('drag');
        }

        myPlacemark = new ymaps.Placemark(YMap.getCenter(), {}, {
            iconLayout: 'default#image',
            iconImageHref: '/images/ico/location-pin.svg',
            iconImageSize: [29, 40],
            iconImageOffset: [-29, -40]
        });

        YMap.geoObjects.add(myPlacemark);
    });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9feWFuZGV4Lm1hcC5qcyJdLCJuYW1lcyI6WyJ5YW5kZXhNYXAiLCJ5bWFwcyIsInJlYWR5IiwiWU1hcCIsIm15UGxhY2VtYXJrIiwiaXNfbW9iaWxlIiwiJCIsIndpbmRvdyIsIndpZHRoIiwiTWFwIiwiY2VudGVyIiwiem9vbSIsImNvbnRyb2xzIiwiYmVoYXZpb3JzIiwiZGlzYWJsZSIsImdldCIsIm9wdGlvbnMiLCJzZXQiLCJyaWdodCIsInRvcCIsIlBsYWNlbWFyayIsImdldENlbnRlciIsImljb25MYXlvdXQiLCJpY29uSW1hZ2VIcmVmIiwiaWNvbkltYWdlU2l6ZSIsImljb25JbWFnZU9mZnNldCIsImdlb09iamVjdHMiLCJhZGQiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFNBQVQsR0FBcUI7QUFDakJDLFVBQU1DLEtBQU4sQ0FBWSxZQUFZO0FBQ3BCLFlBQUlDLElBQUo7QUFBQSxZQUFVQyxXQUFWO0FBQUEsWUFBdUJDLFlBQVlDLEVBQUVDLE1BQUYsRUFBVUMsS0FBVixNQUFxQixHQUF4RDs7QUFFQUwsZUFBTyxJQUFJRixNQUFNUSxHQUFWLENBQWMsY0FBZCxFQUE4QjtBQUNqQ0Msb0JBQVEsQ0FBQyxTQUFELEVBQVksU0FBWixDQUR5QjtBQUVqQ0Msa0JBQU0sRUFGMkI7QUFHakNDLHNCQUFVLENBQUMsYUFBRCxFQUFnQixtQkFBaEI7QUFIdUIsU0FBOUIsQ0FBUDs7QUFNQVQsYUFBS1UsU0FBTCxDQUFlQyxPQUFmLENBQXVCLFlBQXZCO0FBQ0FYLGFBQUtVLFNBQUwsQ0FBZUMsT0FBZixDQUF1QixZQUF2QjtBQUNBWCxhQUFLUyxRQUFMLENBQWNHLEdBQWQsQ0FBa0IsYUFBbEIsRUFBaUNDLE9BQWpDLENBQXlDQyxHQUF6QyxDQUE2QyxNQUE3QyxFQUFxRCxPQUFyRDtBQUNBZCxhQUFLUyxRQUFMLENBQWNHLEdBQWQsQ0FBa0IsYUFBbEIsRUFBaUNDLE9BQWpDLENBQXlDQyxHQUF6QyxDQUE2QyxVQUE3QyxFQUF5RCxFQUFFQyxPQUFPLEVBQVQsRUFBYUMsS0FBSyxFQUFsQixFQUF6RDs7QUFFQSxZQUFJZCxTQUFKLEVBQWU7QUFDWEYsaUJBQUtVLFNBQUwsQ0FBZUMsT0FBZixDQUF1QixNQUF2QjtBQUNIOztBQUVEVixzQkFBYyxJQUFJSCxNQUFNbUIsU0FBVixDQUFvQmpCLEtBQUtrQixTQUFMLEVBQXBCLEVBQXNDLEVBQXRDLEVBQTBDO0FBQ3BEQyx3QkFBWSxlQUR3QztBQUVwREMsMkJBQWUsOEJBRnFDO0FBR3BEQywyQkFBZSxDQUFDLEVBQUQsRUFBSyxFQUFMLENBSHFDO0FBSXBEQyw2QkFBaUIsQ0FBQyxDQUFDLEVBQUYsRUFBTSxDQUFDLEVBQVA7QUFKbUMsU0FBMUMsQ0FBZDs7QUFPQXRCLGFBQUt1QixVQUFMLENBQWdCQyxHQUFoQixDQUFvQnZCLFdBQXBCO0FBQ0gsS0ExQkQ7QUEyQkgiLCJmaWxlIjoiX195YW5kZXgubWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24geWFuZGV4TWFwKCkge1xuICAgIHltYXBzLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIFlNYXAsIG15UGxhY2VtYXJrLCBpc19tb2JpbGUgPSAkKHdpbmRvdykud2lkdGgoKSA8PSA2Njc7XG4gICAgICAgIFxuICAgICAgICBZTWFwID0gbmV3IHltYXBzLk1hcCgnbG9jYXRpb24tbWFwJywge1xuICAgICAgICAgICAgY2VudGVyOiBbNDQuOTcwOTMwLCAzOC45MzQ1MzhdLFxuICAgICAgICAgICAgem9vbTogMTgsXG4gICAgICAgICAgICBjb250cm9sczogWyd6b29tQ29udHJvbCcsICdmdWxsc2NyZWVuQ29udHJvbCddXG4gICAgICAgIH0pO1xuXG4gICAgICAgIFlNYXAuYmVoYXZpb3JzLmRpc2FibGUoJ211bHRpVG91Y2gnKTtcbiAgICAgICAgWU1hcC5iZWhhdmlvcnMuZGlzYWJsZSgnc2Nyb2xsWm9vbScpO1xuICAgICAgICBZTWFwLmNvbnRyb2xzLmdldCgnem9vbUNvbnRyb2wnKS5vcHRpb25zLnNldCgnc2l6ZScsICdzbWFsbCcpO1xuICAgICAgICBZTWFwLmNvbnRyb2xzLmdldCgnem9vbUNvbnRyb2wnKS5vcHRpb25zLnNldCgncG9zaXRpb24nLCB7IHJpZ2h0OiAxMCwgdG9wOiA1MCB9KTtcblxuICAgICAgICBpZiAoaXNfbW9iaWxlKSB7XG4gICAgICAgICAgICBZTWFwLmJlaGF2aW9ycy5kaXNhYmxlKCdkcmFnJyk7XG4gICAgICAgIH1cblxuICAgICAgICBteVBsYWNlbWFyayA9IG5ldyB5bWFwcy5QbGFjZW1hcmsoWU1hcC5nZXRDZW50ZXIoKSwge30sIHtcbiAgICAgICAgICAgIGljb25MYXlvdXQ6ICdkZWZhdWx0I2ltYWdlJyxcbiAgICAgICAgICAgIGljb25JbWFnZUhyZWY6ICcvaW1hZ2VzL2ljby9sb2NhdGlvbi1waW4uc3ZnJyxcbiAgICAgICAgICAgIGljb25JbWFnZVNpemU6IFsyOSwgNDBdLFxuICAgICAgICAgICAgaWNvbkltYWdlT2Zmc2V0OiBbLTI5LCAtNDBdXG4gICAgICAgIH0pO1xuXG4gICAgICAgIFlNYXAuZ2VvT2JqZWN0cy5hZGQobXlQbGFjZW1hcmspO1xuICAgIH0pO1xufSJdfQ==

$(document).ready(function () {
    app.init();
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJhcHAiLCJpbml0Il0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBRUMsUUFBRixFQUFZQyxLQUFaLENBQWtCLFlBQVc7QUFDekJDLFFBQUlDLElBQUo7QUFDSCxDQUZEIiwiZmlsZSI6ImluaXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICBhcHAuaW5pdCgpO1xufSk7XG4iXX0=
